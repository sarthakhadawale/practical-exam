VHDL Program:- (4 Bit ALU)
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity alu is
 Port ( a,b : in STD_LOGIC_VECTOR (03 downto 0);
 sel : in STD_LOGIC_VECTOR (02 downto 0);
 y : out STD_LOGIC_VECTOR (03 downto 0));
end alu;
architecture Behavioral of alu is
begin
With sel select 
y<= a + b when "000",
 a - b when "001",
 a nand b when "010",
 a and b when "011",
 a or b when "100",
 a xor b when "101",
 a xnor b when "110",
a when others;
end Behavioral;




VHDL Testbench:
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.all;
USE ieee.numeric_std.ALL;
ENTITY test_vhd IS
END test_vhd;
ARCHITECTURE behavior OF test_vhd IS 
COMPONENT alu
PORT(
a : IN std_logic_vector(3 downto 0);
b : IN std_logic_vector(3 downto 0);
sel : IN std_logic_vector(2 downto 0); 
y : OUT std_logic_vector(3 downto 0)
);
END COMPONENT;
SIGNAL a : std_logic_vector(3 downto 0) := (others=>'0');
SIGNAL b : std_logic_vector(3 downto 0) := (others=>'0');
SIGNAL sel : std_logic_vector(2 downto 0) := (others=>'0');
SIGNAL y : std_logic_vector(3 downto 0);
BEGIN
uut: alu PORT MAP(a => a,b => b, sel => sel,y => y );
tb : PROCESS
BEGIN
sel<="011";
a<="0001";
b<="1001";
wait for 10 ns;
sel<="100";
wait for 10 ns;
sel<="001";
wait for 10 ns;
sel<="111";
wait for 10 ns;
END PROCESS;
END;